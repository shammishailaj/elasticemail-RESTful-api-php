<?php
/**
 * TemplatesApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * elasticemail_Restful_api
 *
 * Send your emails with ElasticEmail API
 *
 * OpenAPI spec version: 3.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * TemplatesApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TemplatesApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for templatesNameDelete
     *
     * Delete template with the specified ID.
     *
     */
    public function testTemplatesNameDelete()
    {
    }

    /**
     * Test case for templatesNameGet
     *
     * Load template with content.
     *
     */
    public function testTemplatesNameGet()
    {
    }

    /**
     * Test case for templatesNamePut
     *
     * Update existing template, overwriting existing data..
     *
     */
    public function testTemplatesNamePut()
    {
    }

    /**
     * Test case for templatesPost
     *
     * Create new Template. Needs to be sent using POST method.
     *
     */
    public function testTemplatesPost()
    {
    }

    /**
     * Test case for templatesTagsGet
     *
     * Retrieve a list of your Tags.
     *
     */
    public function testTemplatesTagsGet()
    {
    }

    /**
     * Test case for templatesTagsNameDelete
     *
     * Delete a tag, removing it from all Templates.
     *
     */
    public function testTemplatesTagsNameDelete()
    {
    }

    /**
     * Test case for templatesTagsPost
     *
     * Create a new Tag to be used in your Templates.
     *
     */
    public function testTemplatesTagsPost()
    {
    }

    /**
     * Test case for templatesTypeListGet
     *
     * Load a list of templates of a specified type.
     *
     */
    public function testTemplatesTypeListGet()
    {
    }
}
