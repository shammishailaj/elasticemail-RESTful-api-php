<?php
/**
 * RecipientTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * elasticemail_Restful_api
 *
 * Send your emails with ElasticEmail API
 *
 * OpenAPI spec version: 3.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * RecipientTest Class Doc Comment
 *
 * @category    Class */
// * @description Detailed information about message recipient
/**
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class RecipientTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Recipient"
     */
    public function testRecipient()
    {
    }

    /**
     * Test attribute "is_sms"
     */
    public function testPropertyIsSms()
    {
    }

    /**
     * Test attribute "msg_id"
     */
    public function testPropertyMsgId()
    {
    }

    /**
     * Test attribute "to"
     */
    public function testPropertyTo()
    {
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
    }

    /**
     * Test attribute "channel"
     */
    public function testPropertyChannel()
    {
    }

    /**
     * Test attribute "date"
     */
    public function testPropertyDate()
    {
    }

    /**
     * Test attribute "date_sent"
     */
    public function testPropertyDateSent()
    {
    }

    /**
     * Test attribute "date_opened"
     */
    public function testPropertyDateOpened()
    {
    }

    /**
     * Test attribute "date_clicked"
     */
    public function testPropertyDateClicked()
    {
    }

    /**
     * Test attribute "message"
     */
    public function testPropertyMessage()
    {
    }

    /**
     * Test attribute "show_category"
     */
    public function testPropertyShowCategory()
    {
    }

    /**
     * Test attribute "message_category"
     */
    public function testPropertyMessageCategory()
    {
    }

    /**
     * Test attribute "message_category_id"
     */
    public function testPropertyMessageCategoryId()
    {
    }

    /**
     * Test attribute "status_change_date"
     */
    public function testPropertyStatusChangeDate()
    {
    }

    /**
     * Test attribute "next_try_on"
     */
    public function testPropertyNextTryOn()
    {
    }

    /**
     * Test attribute "subject"
     */
    public function testPropertySubject()
    {
    }

    /**
     * Test attribute "from_email"
     */
    public function testPropertyFromEmail()
    {
    }

    /**
     * Test attribute "envelope_from"
     */
    public function testPropertyEnvelopeFrom()
    {
    }

    /**
     * Test attribute "job_id"
     */
    public function testPropertyJobId()
    {
    }

    /**
     * Test attribute "sms_update_required"
     */
    public function testPropertySmsUpdateRequired()
    {
    }

    /**
     * Test attribute "text_message"
     */
    public function testPropertyTextMessage()
    {
    }

    /**
     * Test attribute "message_sid"
     */
    public function testPropertyMessageSid()
    {
    }

    /**
     * Test attribute "contact_last_error"
     */
    public function testPropertyContactLastError()
    {
    }

    /**
     * Test attribute "ip_address"
     */
    public function testPropertyIpAddress()
    {
    }
}
